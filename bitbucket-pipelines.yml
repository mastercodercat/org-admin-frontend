# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image:
  name: 790026602975.dkr.ecr.us-east-1.amazonaws.com/helm/base/node12-angular9:latest
  aws:
    access-key: $AWS_ACCESS_KEY_ID
    secret-key: $AWS_SECRET_ACCESS_KEY

definitions:
  steps:
    - step: &oidc-base
        oidc: true
    - step: &install-deps
        name: 'Install dependencies'
        script:
        - ./bin/bootstrap
        artifacts:
        - node_modules/**
    - step: &run-tests
        image:
          name: 790026602975.dkr.ecr.us-east-1.amazonaws.com/helm/test/node12-angular9-browsers:latest
          aws:
            access-key: $AWS_ACCESS_KEY_ID
            secret-key: $AWS_SECRET_ACCESS_KEY
        name: 'Run test suite'
        script:
        - npm run test
    - step: &deploy-base
        name: 'Deploy (Base)'
        <<: *oidc-base
        script:
        - npm run build org-comp-lib
        - npm run build-${STAGE}
        - . bin/setup-bitbucket-oidc-credentials
        - ./bin/deploy -s ${STAGE} -a frontend-infrastructure -t HelmOrganizerFrontends
        artifacts:
        - dist/organizer-frontends/**
        - dist/org-comp-lib/**
    - step: &deploy-sandbox
        <<: *deploy-base
        deployment: Helm-Sandbox
        name: 'Deploy to Sandbox'
    - step: &deploy-staging
        <<: *deploy-base
        deployment: Helm-Staging
        name: 'Deploy to Staging'
    - step: &deploy-production
        <<: *deploy-base
        deployment: Helm-Production
        name: 'Deploy to Production'
    - step: &install-deploy-deps
        <<: *oidc-base
        name: 'Install deploy dependencies'
        artifacts:
        - infrastructure/node_modules/**
        script:
        - ./bin/bootstrap -i
    - step: &cleanup-base
        name: "Cleaning up ${STACK}-${STAGE}"
        oidc: true
        script:
          - if [ "${OIDC}" == "true" ]; then . bin/setup-bitbucket-oidc-credentials; else . bin/setup-bitbucket-iam-credentials; fi
          - mkdir -p dist/organizer-frontends
          - ./bin/deploy -s ${STAGE} -a ${APP} -t ${STACK} -e -f -d
    - step: &cleanup-sandbox
        <<: *cleanup-base
        deployment: Helm-Sandbox
    - step: &cleanup-staging
        <<: *cleanup-base
        deployment: Helm-Staging
    - step: &cleanup-prod
        <<: *cleanup-base
        deployment: Helm-Production


pipelines:
  pull-requests:
    '**':
      - step:
          <<: *install-deps
      - step:
          <<: *run-tests
  branches:
    'master':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-sandbox
    'staging':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-staging
    'production':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-production
    'deploy/**':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-sandbox
    '**':
      - step:
          <<: *install-deps
      - step:
          <<: *run-tests
