# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image:
  name: node:14

definitions:
  steps:
    - step: &oidc-base
        oidc: true
    - step: &install-deps
        name: 'Install dependencies'
        script:
        - ./bin/bootstrap
        - npm run build-${STAGE}
        artifacts:
        - node_modules/**
        - dist/organizer-frontends/**
        - dist/org-comp-lib/**
    - step: &run-tests
        name: 'Run test suite'
        script:
        - npm run test
    - step: &deploy-base
        name: 'Deploy (Base)'
        <<: *oidc-base
        services:
          - docker
        script:
        - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        - unzip awscliv2.zip
        - ./aws/install
        - . bin/setup-bitbucket-oidc-credentials
        - ./bin/deploy -s ${STAGE} -a frontend-infrastructure -t HelmOrganizerFrontends-frontend
    - step: &deploy-sandbox
        <<: *deploy-base
        deployment: Helm-Sandbox
        name: 'Deploy to Sandbox'
    - step: &deploy-staging
        <<: *deploy-base
        deployment: Helm-Staging
        name: 'Deploy to Staging'
    - step: &deploy-production
        <<: *deploy-base
        deployment: Helm-Production
        name: 'Deploy to Production'
    - step: &install-deploy-deps
        <<: *oidc-base
        name: 'Install deploy dependencies'
        script:
        - cd infrastructure && npm i --save-dev
        artifacts:
        - infrastructure/node_modules/**


pipelines:
  pull-requests:
    '**':
      - step:
          <<: *install-deps
      - step:
          <<: *run-tests
  branches:
    'deploy/*':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-sandbox
    'master':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-sandbox
    'staging':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-staging
    'production':
      - step:
          <<: *install-deps
      - step:
          <<: *install-deploy-deps
      - step:
          <<: *deploy-production
    '**':
      - step:
          <<: *install-deps
      - step:
          <<: *run-tests
